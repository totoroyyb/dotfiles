#!/bin/bash

if [ -f "$HOME/.envrc" ]; then
  source "$HOME/.envrc"
fi

if [ -f "$HOME/.aliases" ]; then
  source "$HOME/.aliases"
fi

export EDITOR="nvim"
export DIFFTOOL=delta

# pyenv
# export PYENV_ROOT="$HOME/.pyenv"
# if [ -d $PYENV_ROOT/bin ]; then
#   [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
#   eval "$(pyenv init -)"
#   # Load pyenv-virtualenv automatically by adding
#   # the following to ~/.bashrc:
#   eval "$(pyenv virtualenv-init -)"
# fi

if command -v thefuck &>/dev/null; then
  # integration
  eval $(thefuck --alias)
  # You can use whatever you want as an alias, like for Mondays:
  eval $(thefuck --alias fk)
fi

if [[ -n "$BASH_VERSION" ]]; then
  # ---- Zoxide (better cd) ----
  eval "$(zoxide init bash)"
  # alias cd="z"

  # iterm2 shell integration
  test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

  # ---- FZF -----
  [ -f ~/.fzf.bash ] && source ~/.fzf.bash
elif [[ -n "$ZSH_VERSION" ]]; then
  # ---- Zoxide (better cd) ----
  eval "$(zoxide init zsh)"
  # alias cd="z"
  #
  # iterm2 shell integration
  test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

  # ---- FZF -----
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
else
  echo "Unknown shell"
fi

# ---- Eza (better ls) -----
alias ls="eza -g --icons=always"

# iterm2 integration setup
IP=$(ip addr show | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | cut -d'/' -f1 | head -1)
export iterm2_hostname=$IP
export ITERM2_SQUELCH_MARK=1

# some additional customization
# -- Use fd instead of fzf --
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_DEFAULT_OPTS="--height 60% --layout=default --border --color=hl:#2dd4bf"
export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

fzf-all-history-widget() {
  setopt localoptions pipefail
  local selected
  selected=$(
    # tac -- "$HISTFILE" 2>/dev/null \
    # | sed -E 's/^: [0-9]+:[0-9]+;//' \
    # | awk '!seen[$0]++' \
    # | fzf --border --prompt='history ❯ ' --query="$LBUFFER"
    tac -- "$HISTFILE" 2>/dev/null |
      sed -E 's/^: [0-9]+:[0-9]+;//' |
      fzf --prompt='backword: ' --query="$LBUFFER"
  ) || {
    zle redisplay
    return 0
  }

  # Put selection on the command line
  LBUFFER=$selected
  CURSOR=${#LBUFFER}
  zle redisplay
}

zle -N fzf-all-history-widget
bindkey '^r' fzf-all-history-widget # Ctrl-r -> fuzzy search across ALL sessions

# completion using arrow keys (based on history)
bindkey '^[[A' history-search-backward
bindkey '^[[B' history-search-forward

# completion using ctrl+p/ctrl+n (based on history)
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
